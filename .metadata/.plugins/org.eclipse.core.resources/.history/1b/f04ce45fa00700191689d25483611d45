package db.mysql;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import java.util.Set;

import db.DBConnection;
import entity.Item;
import external.TicketMasterAPI;

public class MySQLConnection implements DBConnection {
	private Connection connection;

	public MySQLConnection() {
		try {
			Class.forName("com.mysql.cj.jdbc.Driver").getConstructor().newInstance();
			connection = DriverManager.getConnection(MySQLDBUtil.URL);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void close() {
		if (connection != null) {
			try {
				connection.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	@Override
	public void setFavoriteItems(String userId, List<String> itemIds) {
		if (connection == null) {
			System.out.println("DB connection failed.");
		}

		try {
			String sql = "INSERT IGNORE INTO history(user_id,, item_id) VALUES (?,?)";
			PreparedStatement pStatement;
			pStatement = connection.prepareStatement(sql);
			pStatement.setString(1, userId);
			for (String itemid : itemIds) {
				pStatement.setString(2, itemid);
				pStatement.execute();
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public void unsetFavoriteItems(String userId, List<String> itemIds) {
		// TODO Auto-generated method stub

	}

	@Override
	public Set<String> getFavoriteItemIds(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<Item> getFavoriteItems(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<String> getCategories(String itemId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Item> searchItems(double lat, double lon, String term) {
		TicketMasterAPI tmAPI = new TicketMasterAPI();
		List<Item> items = tmAPI.search(lat, lon, null);
		for (Item item : items) {
			saveItem(item);
		}
		return items;
	}

	@Override
	public void saveItem(Item item) {
		if (connection == null) {
			System.out.println("DB connection failed.");
		}

		try {
			String sql = "INSERT IGNORE INTO items VALUES (?,?,?,?,?,?)";
			PreparedStatement pStatement;
			pStatement = connection.prepareStatement(sql);
			pStatement.setString(1, item.getItemId());
			pStatement.setString(2, item.getName());
			pStatement.setString(3, item.getAddress());
			pStatement.setString(4, item.getImageUrl());
			pStatement.setString(5, item.getUrl());
			pStatement.setDouble(6, item.getDistance());
			pStatement.execute();

			sql = "INSERT IGNORE INTO categories VALUES(?, ?)";
			pStatement = connection.prepareStatement(sql);
			pStatement.setString(1, item.getItemId());
			for (String category : item.getCategories()) {
				pStatement.setString(2, category);
				pStatement.execute();
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public String getFullname(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean verifyLogin(String userId, String password) {
		// TODO Auto-generated method stub
		return false;
	}

}
